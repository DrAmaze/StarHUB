{"version":3,"sources":["serviceWorker.js","components/styles/styles.jsx","actions/queries.js","components/repos/repoListItem.jsx","components/utility/loading.jsx","components/repos/repoList.jsx","components/utility/dashboard.jsx","components/utility/footer.jsx","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","colors","styles","app","backgroundColor","height","dashboard","textAlign","input","borderBottom","concat","color","width",":focus","outline","@media (max-width: 415px)","fontSize","@media (max-width: 315px)","@media (max-width: 250px)","header","fontWeight","padding","footer","borderTop","bottom","display","flexDirection","justifyContent","overflow","position","zIndex","hover",":hover","repoList","gridTemplateColumns","gridTemplateRows","@media (max-width: 1100px)","@media (max-width: 475px)","repoListItem","margin","border","borderRadius","@media (max-width: 750px)","itemHeader","@media (max-width: 600px)","@media (max-width: 375px)","starring","gazers","count","number","button","url","@media (max-width: 690px)","loading","space","gql","_templateObject","GET_REPOSITORIES","_templateObject2","STAR_REPOSITORY","_templateObject3","UNSTAR_REPOSITORY","_templateObject4","RepoListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isStarred","repository","viewerHasStarred","stargazers","totalCount","_this$props$repositor","id","addStarLoading","react_default","a","createElement","style","removeStarLoading","errorDiv","err","className","message","name","href","react_apollo_browser_umd","mutation","variables","removeStar","_ref2","data","error","onClick","key","v4","addStar","_ref","Component","Radium","Loading","title","version","xmlns","xlink","x","y","viewBox","enableBackground","fill","attributeType","attributeName","type","values","begin","dur","repeatCount","RepoList","searchTerm","login","arguments","length","undefined","query","utility_loading","repositoryOwner","repositories","renderingRepos","nodes","map","repo","React","Dashboard","e","setState","submitted","_this2","repos_repoList","placeholder","required","onChange","target","value","console","log","process","client","ApolloClient","uri","cache","InMemoryCache","request","operation","setContext","headers","authorization","App","ReactDOM","render","style_root","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a17ebf9c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const colors = {\n  purple: '#ab20c8',\n  cream: '#e9ebf8',\n  blue: '#79addc',\n  salmon: '#ffc09f',\n  yellow: '#ffee93'\n}\n\nexport const styles = {\n  app: {\n    backgroundColor: colors.cream,\n    height: '110%',\n  },\n  dashboard: {\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: colors.cream,\n    borderBottom: `2px dotted ${ colors.blue }`,\n    color: colors.purple,\n    width: '400px',\n    textAlign: 'center',\n    ':focus': {\n      outline: 'none'\n    },\n    '@media (max-width: 415px)': {\n      width: '90%',\n      fontSize: '.8em'\n    },\n    '@media (max-width: 315px)': {\n      fontSize: '.6em'\n    },\n    '@media (max-width: 250px)': {\n      fontSize: '.5em'\n    },\n  },\n  header: {\n    color: colors.purple,\n    fontSize: '2em',\n    textAlign: 'center',\n    fontWeight: 'bolder',\n    padding: '1em 0',\n  },\n  footer: {\n    backgroundColor: colors.yellow,\n    borderTop: '1px solid lightgray',\n    bottom: 0,\n    color: colors.purple,\n    display: 'flex',\n    flexDirection: 'horizontal',\n    justifyContent: 'space-evenly',\n    fontSize: '1.5em',\n    height: '36px',\n    overflow: 'hidden',\n    position: 'fixed',\n    textAlign: 'center',\n    width: '100%',\n    zIndex: 10,\n  },\n  hover: {\n    ':hover': {\n      color: colors.salmon\n    }\n  },\n  repoList: {\n    display: 'inline-grid',\n    gridTemplateColumns: '33% 34% 33%',\n    gridTemplateRows: 'auto',\n    textAlign: 'center',\n    width: '100%',\n    '@media (max-width: 1100px)': {\n      gridTemplateColumns: '50% 50%',\n    },\n    '@media (max-width: 475px)': {\n      gridTemplateColumns: '100%',\n    }\n  },\n  repoListItem: {\n    margin: '1em',\n    padding: '.7em',\n    border: `1px dotted ${ colors.blue }`,\n    borderRadius: '5px',\n    '@media (max-width: 750px)': {\n      margin: '1em .5em',\n    },\n  },\n  itemHeader: {\n    fontWeight: 'bold',\n    fontSize: '1.8em',\n    color: colors.blue,\n    '@media (max-width: 600px)': {\n      fontSize: '1em',\n    },\n    '@media (max-width: 475px)': {\n      fontSize: '2em',\n    }, \n    '@media (max-width: 375px)': {\n      fontSize: '1em',\n    }\n  },\n  starring: {\n    display: 'flex',\n    flexDirection: 'horizontal',\n    justifyContent: 'space-evenly'\n  },\n  gazers: {\n    margin: 'auto 0'\n  },\n  count: {\n    fontSize: '1em',\n    textAlign: 'center',\n    margin: '1.5em 0',\n  },\n  number: {\n    color: colors.purple,\n    fontWeight: 'bold',\n    display: 'inline'\n  },\n  button: {\n    border: `1px solid ${ colors.salmon }`,\n    borderRadius: '10px',\n    backgroundColor: colors.yellow,\n    color: colors.salmon,\n    padding: '5px 10px',\n    ':hover': {\n      border: `1px solid ${ colors.yellow }`,\n      backgroundColor: colors.salmon,\n      color: colors.yellow,\n    }\n  },\n  url: {\n    '@media (max-width: 690px)': {\n      fontSize: '.5em'\n    },\n    '@media (max-width: 475px)': {\n      fontSize: '1em',\n    },\n    '@media (max-width: 375px)': {\n      fontSize: '.5em',\n    }\n  },\n  loading: {\n    textAlign: 'center',\n    color: colors.purple\n  },\n  space: {\n    padding: '20px 0'\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const GET_REPOSITORY = gql`\n  query GetRepository($login: String!, $name: String!) {\n    repositoryOwner(login: $login) {\n      repository(name: $name) {\n        id\n        name\n        owner {\n          login\n        }\n        description\n        stargazers(first: 100) {\n          totalCount\n        }\n        url\n      }\n    }\n  }\n`;\n\nexport const GET_REPOSITORIES = gql`\n  query GetRepositories($login: String!) {\n    repositoryOwner(login: $login) {\n      repositories(first: 50) {\n        totalCount\n        nodes {\n          id\n          description\n          name\n          owner {\n            login\n          }\n          url\n          stargazers(first:10){\n            totalCount\n          }\n          viewerHasStarred\n        }\n      }\n    }   \n  }\n`;\n\nexport const STAR_REPOSITORY = gql`\n  mutation StarRepository($id: ID!) {\n    addStar(input: { starrableId: $id }) {\n      starrable {\n        id\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\nexport const UNSTAR_REPOSITORY = gql`\n  mutation StarRepository($id: ID!) {\n    removeStar(input: { starrableId: $id }) {\n      starrable {\n        id\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\n// repositoryOwner:\n// repositories:\n// nodes: Array(20)\n// 0:\n// description: \"the OG repository\"\n// id: \"MDEwOlJlcG9zaXRvcnk5MzE5MzYyMg==\"\n// name: \"hello-world\"\n// owner: { login: \"DrAmaze\", __typename: \"User\" }\n// stargazers: { totalCount: 0, __typename: \"StargazerConnection\" }\n// url: \"https://github.com/DrAmaze/hello-world\"\n// __typename: \"Repository\"\n// __proto__: Object\n// 1:\n// description: null\n// id: \"MDEwOlJlcG9zaXRvcnk5NDg1MzUzMw==\"\n// name: \"cloud9\"\n// owner: { login: \"DrAmaze\", __typename: \"User\" }\n// stargazers: { totalCount: 0, __typename: \"StargazerConnection\" }\n// url: \"https://github.com/DrAmaze/cloud9\"\n// __typename: \"Repository\"\n// __proto__: Object\n// 2:\n// description: \"app academy prep\"\n// id: \"MDEwOlJlcG9zaXRvcnk5NzUzMDU5MA==\"\n// name: \"practice-problems\"\n// owner: { login: \"DrAmaze\", __typename: \"User\" }\n// stargazers: { totalCount: 0, __typename: \"StargazerConnection\" }\n// url: \"https://github.com/DrAmaze/practice-problems\"\n// __typename: \"Repository\"","import React, { Component } from 'react';\nimport Radium from 'radium';\nimport { v4 } from 'uuid';\nimport {\n  STAR_REPOSITORY,\n  UNSTAR_REPOSITORY\n} from '../../actions/queries';\nimport { Mutation } from 'react-apollo';\nimport { styles } from '../styles/styles';\n\nclass RepoListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isStarred: this.props.repository.viewerHasStarred,\n      stargazers: this.props.repository.stargazers.totalCount\n    }\n  }\n\n\n  render() {\n    const { id, viewerHasStarred } = this.props.repository;\n    let { stargazers } = this.state;\n    const { isStarred } = this.state;\n\n    const addStarLoading = <div style={ styles.gazers }>Sending the star...</div>;\n    const removeStarLoading = <div>Removing the star...</div>;\n    const errorDiv = err => <div className='error'>{ err.message }</div>;\n\n    const mutation = starred => {\n      if (!starred) {\n        return <Mutation mutation={ STAR_REPOSITORY } variables={{ id }}>\n          {(addStar, { data, loading, error }) => {\n            if (loading) return <div>{ addStarLoading }</div>\n            if (error) return errorDiv(error);\n            if (data) {\n              if (isStarred) stargazers--;\n            }\n\n            return (\n              <div style={ styles.starring }>\n                <div style={ styles.gazers }>Stargazers: { stargazers }</div>\n                <button onClick={ addStar }\n                  style={ styles.button }\n                  key={ v4() }>\n                  STAR\n                </button>\n              </div>\n            )\n          }}\n        </Mutation>\n      } else {\n        return <Mutation mutation={ UNSTAR_REPOSITORY } variables={{ id }}>\n          {(removeStar, { data, loading, error }) => {\n            if (loading) return <div>{ removeStarLoading }</div>;\n            if (error) return errorDiv(error);\n            if (data) {\n              if (!isStarred) stargazers++;\n            }\n\n            return (\n              <div style={ styles.starring }>\n                <div style={ styles.gazers }>Stargazers: { stargazers }</div>\n                <button onClick={ removeStar }\n                  style={ styles.button }\n                  key={ v4() }>\n                  UNSTAR\n                </button>\n              </div>\n            )\n          }}\n        </Mutation>\n      }\n    }\n    \n    return (\n      <li style={ styles.repoListItem }>\n        <h2 style={ styles.itemHeader }>{ this.props.repository.name }</h2>\n        <h5 style={ styles.url }><a href={ this.props.repository.url }\n          style={ styles.hover }>\n          { this.props.repository.url }\n        </a></h5>\n        { mutation(viewerHasStarred) }\n      </li>\n    )\n  }\n}\n\nexport default Radium(RepoListItem);\n","import React from 'react';\nimport { styles, colors } from '../styles/styles';\n\nconst Loading = () => {\n  return (\n    <div className='loader loader--style5' title='4' style={ styles.loading }>\n      <svg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xlink='http://www.w3.org/1999/xlink' x='0px' y='0px'\n        width='24px' height='30px' viewBox='0 0 24 30' style={{ enableBackground: 'new 0 0 50 50' }} >\n        <rect x='0' y='0' width='4' height='20' fill={ colors.salmon }>\n          <animateTransform attributeType='xml'\n            attributeName='transform' type='translate'\n            values='0 0; 0 20; 0 0'\n            begin='0' dur='0.6s' repeatCount='indefinite' />\n        </rect>\n        <rect x='10' y='0' width='4' height='20' fill={ colors.purple }>\n          <animateTransform attributeType='xml'\n            attributeName='transform' type='translate'\n            values='0 0; 0 20; 0 0'\n            begin='0.2s' dur='0.6s' repeatCount='indefinite' />\n        </rect>\n        <rect x='20' y='0' width='4' height='20' fill={ colors.yellow }>\n          <animateTransform attributeType='xml'\n            attributeName='transform' type='translate'\n            values='0 0; 0 20; 0 0'\n            begin='0.4s' dur='0.6s' repeatCount='indefinite' />\n        </rect>\n      </svg>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport Radium from 'radium';\nimport { Query } from 'react-apollo';\nimport RepoListItem from './repoListItem';\nimport { GET_REPOSITORIES } from '../../actions/queries';\nimport Loading from '../utility/loading';\nimport { styles } from '../styles/styles';\n\nclass RepoList extends React.Component {\n  render() {\n    const searchTerm = this.props.searchTerm; \n    const errorDiv = err => <div className='error'>{ err.message }</div>\n    \n    const query = (login = '') => (\n      <Query query={ GET_REPOSITORIES } variables={{ login }}>\n        {\n          ({ loading, error, data }) => {\n            if (loading) return <Loading />\n            if (error) return errorDiv(error);\n\n            if (\n              data &&\n              data.repositoryOwner &&\n              data.repositoryOwner.repositories\n            ) {\n              const repos = data.repositoryOwner.repositories.nodes;\n              const renderingRepos = repos.map(repo =>\n                <RepoListItem repository={ repo }\n                  key={ repo.id }/>\n              );\n              const count = renderingRepos.length;\n              return (\n                <div>\n                  <h3 style={ styles.count }>\n                    Showing <p style={ styles.number }>{ count }</p> results for { searchTerm }\n                  </h3>\n                  <ul style={ styles.repoList } >\n                    { renderingRepos }\n                  </ul> \n                </div>\n              )\n            } else {\n              return <div></div>\n            }\n          }\n        }\n      </Query>\n    );\n    return (\n      <div className='repo-list'>\n        { query(searchTerm) }\n      </div>\n    )\n  }\n}\n\nexport default Radium(RepoList);","import React, { Component } from 'react';\nimport Radium from 'radium';\nimport { styles } from '../styles/styles';\nimport RepoList from '../repos/repoList';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n    }\n  }\n\n  search(e) {\n    this.setState({ submitted: true });\n  }\n  \n  render() {\n    const { searchTerm } = this.state;\n    const repoList = <RepoList searchTerm={ searchTerm } />;\n    return (\n      <div>\n        <div style={ styles.dashboard }>\n          <input type='text'\n            className='search'\n            placeholder='Search GitHub by Username (case sensitive)'\n            required\n            onChange={ e => this.setState({ searchTerm: e.target.value }) }\n            style={ styles.input } />\n        </div>\n\n        <div>\n          { repoList }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Radium(Dashboard);","import React from 'react';\nimport Radium from 'radium';\nimport { styles } from '../styles/styles';\n\nconst Footer = () => (\n  <footer style={ styles.footer }>\n    <div>\n      <a href='https://www.linkedin.com/in/jacob-butler-a2ab7093'\n        style={ styles.hover }\n        key='link1'>\n        LinkedIn\n      </a>\n    </div>\n\n    <div>\n      <a href='https://dramaze.github.io/personal_site/'\n        style={ styles.hover }\n        key='link2'>\n        Portfolio\n      </a>\n    </div>\n\n    <div>\n      <a href='https://github.com/DrAmaze'\n        style={ styles.hover }\n        key='link3'>\n        GitHub\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Radium(Footer);","import ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport React, { Component } from 'react';\nimport Radium from 'radium';\nimport { styles } from './styles/styles';\nimport Dashboard from './utility/dashboard';\nimport Footer from './utility/footer';\n\nconsole.log(process.env);\n\nconst client = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  cache: new InMemoryCache(),\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer 7e4d6869cc87eaab83c77eb6e210ec9881b75bb8`\n      }\n    });\n  }\n});\n\n// This component operates as the dashboard of the single-page app\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={ client } >\n        <div className='App'\n          style={ styles.app }>\n          <header className='App-header'\n            style={ styles.header }>\n            <h1>StarHUB</h1>\n          </header>\n          <Dashboard />\n          <Footer />\n          <div style={ styles.space }></div>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default Radium(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { StyleRoot } from 'radium';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n  <StyleRoot>\n    <App />\n  </StyleRoot>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}